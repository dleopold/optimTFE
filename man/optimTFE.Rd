% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimTFE_algorithm.R
\name{optimTFE}
\alias{optimTFE}
\title{optimTFE algorithm: generate a suite of conservation footprint 'solutions'
based on Feature suitability values and a list of Targets for all Features.}
\usage{
optimTFE(
  dir = here::here(),
  spp_targets_fn = NULL,
  spp_suit_fn = NULL,
  sub_regions_fn = NULL,
  spp_pops_fn = NULL,
  min_spp_suit_score = 0,
  max_candidate_units = Inf,
  rand_tolerance = 5,
  max_spp_selected = Inf,
  use_subregion_targets = !is.null(sub_regions_fn) && file.exists(sub_regions_fn),
  prioritize_known_pops = !is.null(spp_pops_fn) && file.exists(spp_pops_fn),
  single_pu_pop = TRUE,
  n = 100,
  cores = future::availableCores(),
  progress = TRUE,
  batch_size = NULL,
  max_batch_size = 1000,
  min_batch_size = 10,
  seed = NULL,
  output_dir = file.path(dir, "output"),
  output_prefix = "solutions",
  output_csv = TRUE,
  output_parquet = FALSE,
  force_overwrite = FALSE,
  delete_tmp_files = TRUE,
  return_df = FALSE
)
}
\arguments{
\item{dir}{working directory}

\item{spp_targets_fn}{.csv of species targets. First 2 columns should be
species names and total targets populations, respectively. Additional
columns should be provided when using subregion targets. Column names must
match the sub-region names provided in the sub_regions_fn input and values
should be the minimum number of populations required in the the subregion.}

\item{spp_suit_fn}{input species suitability matrix. Rows are locations and
columns are species. Must include species names and location ids in the
column and row names, respectively.}

\item{sub_regions_fn}{(optional) A csv input defining sub-regions. Should
include 1 row for each planning unit with binary values indicating the
sub-region membership of each planning unit.}

\item{spp_pops_fn}{(optional) .csv input matrix of delineated populations.
Row / column names must match suitability matrix}

\item{min_spp_suit_score}{minimum suitability score for a species to be
considered in a location (default = 0)}

\item{max_candidate_units}{maximum number of candidate units to consider for a
species at each round of selection (default = Inf). This will subset
species data by highest suitability score to the number of units listed,
but will not exclude known populations.}

\item{rand_tolerance}{the range of species richness, from maximum, to
consider for selection at each iteration(default = 5)}

\item{max_spp_selected}{maximum number of species to select in each location
(default = Inf) to reduce 'species packing' within units. This parameter
could cause species to be unable to meet targets.}

\item{use_subregion_targets}{should subregion targets be used (default = TRUE
if a valid sub_regions_fn is provided).}

\item{prioritize_known_pops}{should known delineated populations be
prioritized (default = TRUE if a valid spp_pops_fn is provided)}

\item{single_pu_pop}{only one location (ie unit) selected per delineated
population (only when prioritize_known_pops = TRUE)}

\item{n}{number of solutions to generate}

\item{cores}{number of cores to use (default = all available)}

\item{progress}{show progress bar}

\item{batch_size}{when parallel processing is used, this parameter can be
used to process solution in batches for improved efficiency (default =
NULL). If not provided (NULL), batch size will be calculated automatically
as `ceiling(n/(cores*4))`.}

\item{max_batch_size}{limit batch size for parallel processing (default =
1000). Smaller values will allow the progress bar to update more
frequently, but at the cost of more disk writes.}

\item{min_batch_size}{default = 10.}

\item{seed}{seed for reproducible output (optional)}

\item{output_dir}{location to write outputs (default = `file.path(dir,
'output')`)}

\item{output_prefix}{prefix for output files (default = 'solutions')}

\item{output_csv}{Should the solutions be written to a single csv file
(default = TRUE)}

\item{output_parquet}{Should the solutions be written to a parquet file
(default = FALSE)}

\item{force_overwrite}{overwrite existing output files (default = FALSE)}

\item{delete_tmp_files}{should temporary files be deleted after processing
(default = TRUE)}

\item{return_df}{return all generated solutions as a data frame (default =
FALSE)}
}
\description{
optimTFE algorithm: generate a suite of conservation footprint 'solutions'
based on Feature suitability values and a list of Targets for all Features.
}
