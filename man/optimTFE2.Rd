% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimTFE2.R
\name{optimTFE2}
\alias{optimTFE2}
\title{optimTFE algorithm}
\usage{
optimTFE2(
  targets = optimTFE::example_targets,
  suitability = optimTFE::example_suitability,
  subregions = optimTFE::example_subregions,
  populations = optimTFE::example_populations,
  incompatibility = optimTFE::example_incompatibility,
  spatial = optimTFE::example_spatial,
  min_spp_suit_score = 0.25,
  rand_tolerance = 5,
  max_spp_selected = -1,
  single_pu_pop = TRUE,
  n = 100,
  cores = NULL,
  progress = TRUE,
  batch_size = NULL,
  max_batch_size = 1000,
  seed = NULL,
  out_dir = ".",
  run_id = "optimTFE",
  output_csv = TRUE,
  return_df = FALSE,
  force_overwrite = FALSE,
  summary = TRUE,
  spatial_projection = NULL
)
}
\arguments{
\item{targets}{species targets file - path to a csv/tsv file or a
pre-loaded data frame. First 2 columns should be species names and total
targets populations, respectively. Additional columns must be provided when
using sub-region targets. If specifying subregion targets, column names
must match the sub-region names provided in `subregions_in` and values
should be the minimum number of populations required in the sub-region.}

\item{min_spp_suit_score}{minimum suitability score for a species to be
considered in a location (default = 0)}

\item{rand_tolerance}{the range of species richness, from maximum, to
consider for selection at each iteration(default = 5)}

\item{max_spp_selected}{maximum number of species to select in each location
(default = Inf) to reduce 'species packing' within units. This parameter
could cause species to be unable to meet targets.}

\item{single_pu_pop}{should only one location (ie unit) be selected per
delineated population (default=TRUE). Only applies if a know population
file (`populations_in`) is provided.}

\item{n}{number of solutions to generate}

\item{cores}{number of cores to use (default = all available)}

\item{progress}{show progress bar}

\item{batch_size}{when parallel processing is used, this parameter can be
used to process solution in batches for improved efficiency (default =
NULL). If not provided (NULL), batch size will be calculated automatically
as `ceiling(n/(cores*4))`.}

\item{max_batch_size}{limit batch size for parallel processing (default =
1000). Smaller values will allow the progress bar to update more
frequently, but at the cost of more disk writes.}

\item{seed}{seed for reproducible output (optional)}

\item{run_id}{prefix for output files (default = 'solutions')}

\item{output_csv}{Should the solutions be written to a single csv file
(default = TRUE)}

\item{return_df}{return all generated solutions as a data frame (default =
FALSE)}

\item{force_overwrite}{overwrite existing output files (default = FALSE)}

\item{dir}{working directory}

\item{suitability_in}{species suitability matrix - path to a csv/tsv file or
a pre-loaded data frame. The first column must be the planning unit id /
number and following columns are species. Values indicate the suitability
scores for each species / taxon in each planning unit.}

\item{subregions_in}{(optional) path to a csv/tsv file or a pre-loaded data
frame defining sub-regions within the set of planning units. Must include 1
row for each planning unit with binary values indicating the sub-region
membership of each planning unit. Sub-region column names must match those
in the `targets_in`.}

\item{populations_in}{(optional) path to a csv/tsv file or a pre-loaded
data frame of delineated populations. Must have columns unit_id, species,
and population. Values in the population column will be interpreted and
unique populations for each species, and values can be repeated across
species (i.e.,  population '1' for species A will not conflict with
population '1' for species B).}

\item{max_candidate_units}{maximum number of candidate units to consider for
a species at each round of selection (default = Inf). This will subset
species data by highest suitability score to the number of units listed,
but will not exclude known populations.}

\item{min_batch_size}{default = 100.}

\item{output_dir}{location to write outputs (default = `file.path(dir,
'output')`). Created for user if does not exist.}
}
\description{
Generate a suite of conservation footprint 'solutions' based on feature
suitability values and a list of targets for all features.
}
\details{
The function generates conservation footprints based on species/feature
habitat suitability scores within planning units, and a target number of
populations per species. A greedy algorithm iteratively selects planning
units with the highest number of remaining species targets until all targets
are met. To mitigate known pitfalls of richness-based selection at each
iteration, stochasticity is introduced where one planning unit is randomly
selected from a pool of planning units within a set number of targets of the
maximum for that iteration. To maximize species suitability scores in
selected units the probability of selection is weighted by the mean
suitability scores of remaining targets. Constraints, such as hybridization,
can be introduced to specifically prohibit the algorithm from selecting the
same planning unit for two taxa. This process is then repeated to generate
many spatially efficient solutions that meet all targets for each species.
}
