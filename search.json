[{"path":"https://dleopold.github.io/optimTFE/DISCLAIMER.html","id":null,"dir":"","previous_headings":"","what":"Disclaimer","title":"Disclaimer","text":"software preliminary provisional subject revision. provided meet need timely best science. software received final approval U.S. Geological Survey (USGS). warranty, expressed implied, made USGS U.S. Government functionality software related material shall fact release constitute warranty. software provided condition neither USGS U.S. Government shall held liable damages resulting authorized unauthorized use software.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"License","title":"License","text":"Unless otherwise noted, project public domain United States contains materials originally came United States Geological Survey, agency United States Department Interior. information, see official USGS copyright policy https://www.usgs.gov/information-policies--instructions/copyrights--credits Additionally, waive copyright related rights work worldwide CC0 1.0 Universal public domain dedication.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"cc0-10-universal-summary","dir":"","previous_headings":"","what":"CC0 1.0 Universal Summary","title":"License","text":"human-readable summary Legal Code (read full text).","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"no-copyright","dir":"","previous_headings":"CC0 1.0 Universal Summary","what":"No Copyright","title":"License","text":"person associated work deed dedicated work public domain waiving rights work worldwide copyright law, including related neighboring rights, extent allowed law. can copy, modify, distribute perform work, even commercial purposes, without asking permission.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"other-information","dir":"","previous_headings":"CC0 1.0 Universal Summary","what":"Other Information","title":"License","text":"way patent trademark rights person affected CC0, rights persons may work work used, publicity privacy rights. Unless expressly stated otherwise, person associated work deed makes warranties work, disclaims liability uses work, fullest extent permitted applicable law. using citing work, imply endorsement author affirmer.","code":""},{"path":"https://dleopold.github.io/optimTFE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Devin R Leopold. Author, maintainer. Christina R Leopold. Author. Lucas Berio Fortini. Author.","code":""},{"path":"https://dleopold.github.io/optimTFE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leopold DR, Leopold CR, Fortini LB (2025). optimTFE: Conservation recovery planning via optimization algorithm. R package version 1.0.0, https://github.com/dleopold/optimTFE.git.","code":"@Manual{,   title = {optimTFE: Conservation recovery planning via optimization algorithm},   author = {Devin R Leopold and Christina R Leopold and Lucas Berio Fortini},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/dleopold/optimTFE.git}, }"},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"optimtfe","dir":"","previous_headings":"","what":"Conservation recovery planning via optimization algorithm","title":"Conservation recovery planning via optimization algorithm","text":"OptimTFE spatial decision-support tool designed help conservation practitioners identify priority recovery areas species/taxonomic groups based known location data, habitat suitability values, relevant data inputs. optimTFE tool developed improve transparency, flexibility, expert engagement throughout spatial conservation prioritization process.optimTFE can used dataset includes suitability values species target number priority recovery areas . tool designed spatial visualization, optimization algorithm require spatial data. tool based spatial conservation prioritization tool, Marxan, terminology largely adopted (Ball et al., 2009). package includes two data visualization tools using RShiny allow visualizing tradeoffs across metrics evaluating solutions generated using optimTFE algorithm. function generates conservation footprints based species/feature habitat suitability scores within planning units, target number populations per species. greedy algorithm iteratively selects planning units highest number remaining species targets targets met. mitigate known pitfalls richness-based selection iteration, stochasticity introduced one planning unit randomly selected pool planning units within set number targets maximum iteration. maximize species suitability scores selected units probability selection weighted mean suitability scores remaining targets. Constraints, hybridization, can introduced specifically prohibit algorithm selecting planning unit two taxa. process repeated generate many spatially efficient solutions meet targets species.","code":""},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Conservation recovery planning via optimization algorithm","text":"can install optimTFE GitHub :","code":"# install.packages(\"pak\") pak::pak(\"dleopold/optimTFE\")"},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"suggested-citation","dir":"","previous_headings":"","what":"Suggested citation","title":"Conservation recovery planning via optimization algorithm","text":"Leopold, C. R., Leopold, D. R., Berio Fortini, L. optimTFE, U.S. Geological Survey software release, https://doi.org/10.5066/P137H9PF.","code":""},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Conservation recovery planning via optimization algorithm","text":"Berio Fortini, L., Leopold, C. L., Amidon, F., Leopold, D. R., Fretz, J. S., Jacobi, J. D. Mehrhoff, L., Price, J. P., Duvall, F., Keir, M., Oppenheimer, H., Weiseneberger, L., & Sutter, R. Accepted. Advancing Landscape-Scale Conservation Planning Transparent, Flexible, Expert-Engaged Approach -Risk Species Recovery Era Rapid Ecological Change. Conservation Biology. Leopold, C.R., Berio Fortini, L., Amidon, F., Fretz, S., Jacobi, J.D., Mehrhoff, L., & Sutter, R. 2023. East Maui, Hawaiʻi optimization climate resilient habitat native plant species recovery, 2021: U.S. Geological Survey data release, https://doi.org/10.5066/P9LKNAR4. Ball, . R., Possingham, H. P., & Watts, M. E. (2009). Marxan relatives: Software spatial conservation prioritization. . Moilanen, K. . Wilson, & H. P. Possingham (Eds.), Spatial conservation prioritization: Quantitative methods computational tools (pp. 185–195). Oxford University Press.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/all_solutions_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot unit count frequencies across all solutions — all_solutions_freq","title":"Plot unit count frequencies across all solutions — all_solutions_freq","text":"Plot unit count frequencies across solutions","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/all_solutions_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot unit count frequencies across all solutions — all_solutions_freq","text":"","code":"all_solutions_freq(pu_count_by_solution_df)"},{"path":"https://dleopold.github.io/optimTFE/reference/all_solutions_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot unit count frequencies across all solutions — all_solutions_freq","text":"pu_count_by_solution_df dataframe solution column unit count per solution column","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/all_solutions_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot unit count frequencies across all solutions — all_solutions_freq","text":"Return data.frame unit count frequencies","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/compute_perimeter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute perimeter of a subset of polygons — compute_perimeter","title":"Compute perimeter of a subset of polygons — compute_perimeter","text":"Calculates perimeter collection polygons, counting shared boundaries . provides true outer perimeter combined shape.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/compute_perimeter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute perimeter of a subset of polygons — compute_perimeter","text":"","code":"compute_perimeter(subset, key)"},{"path":"https://dleopold.github.io/optimTFE/reference/compute_perimeter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute perimeter of a subset of polygons — compute_perimeter","text":"subset Vector polygon IDs calculate perimeter key segment key data frame created generate_segment_key()","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/compute_perimeter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute perimeter of a subset of polygons — compute_perimeter","text":"Numeric value perimeter length units spatial data","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/create_interactive_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interactive Map — create_interactive_map","title":"Create Interactive Map — create_interactive_map","text":"Generates interactive map visualizing conservation footprints additional layers specified user.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/create_interactive_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interactive Map — create_interactive_map","text":"","code":"create_interactive_map(   solution_result_file,   original_PU_polygons,   selected_sol_index,   auxiliaryLayers = NULL,   map_individual_spp = NULL,   save_HTML_loc = NULL )"},{"path":"https://dleopold.github.io/optimTFE/reference/create_interactive_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Interactive Map — create_interactive_map","text":"solution_result_file .csv optimTFE output dataframe containing solution results. original_PU_polygons Spatial dataframe unit ids species scores. selected_sol_index Integer, index solution map. auxiliaryLayers (Optional) List auxiliary layers add map. map_individual_spp (Optional) List species add map. save_HTML_loc (Optional) save location html file sharing collaborators.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/create_interactive_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Interactive Map — create_interactive_map","text":"interactive leaflet map solutions optimTFE alogrithm.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Species incompatibility input — example_incompatibility","title":"Example Species incompatibility input — example_incompatibility","text":"n x n binary matrix indicating species pairs compatable (0) incompatibile (1).","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Species incompatibility input — example_incompatibility","text":"","code":"example_incompatibility"},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Species incompatibility input — example_incompatibility","text":"matrix 30 rows 30 columns","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Known population input — example_populations","title":"Example Known population input — example_populations","text":"example know population matrix, 795 rows (units) 30 columns (species). Unique values species column indicates known population, popultaions spanning one unit.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Known population input — example_populations","text":"","code":"example_populations"},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Known population input — example_populations","text":"matrix 795 rows 30 columns","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Spatial Data — example_spatial","title":"Example Spatial Data — example_spatial","text":"hexagonal grid planning units.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Spatial Data — example_spatial","text":"","code":"example_spatial"},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Spatial Data — example_spatial","text":"spatial data frame 795 rows: unit_id Planning unit name / identifier geometry hexagonal grid","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Subregions input — example_subregions","title":"Example Subregions input — example_subregions","text":"example subregions matrix, specifying example planning units comprise `left` `right` regions.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Subregions input — example_subregions","text":"","code":"example_subregions"},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Subregions input — example_subregions","text":"object class matrix (inherits array) 795 rows 2 columns.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Species Suitability Data — example_suitability","title":"Example Species Suitability Data — example_suitability","text":"matrix habitat suitability values 30 species.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Species Suitability Data — example_suitability","text":"","code":"example_suitability"},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Species Suitability Data — example_suitability","text":"numeric matrix 796 rows (units) 30 columns (species)","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Targets Data — example_targets","title":"Example Targets Data — example_targets","text":"example targets matrix, specifying 10 total conservation targets 30 species (rows). matrix include subregion targets 2 Bioregions, `left` `right`.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Targets Data — example_targets","text":"","code":"example_targets"},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Targets Data — example_targets","text":"matrix 30 rows 3 columns: total total target value species left species target value left region right species target value right region","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/explore_footprints.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — explore_footprints","title":"Run the Shiny Application — explore_footprints","text":"Run Shiny Application","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/explore_footprints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — explore_footprints","text":"","code":"explore_footprints(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://dleopold.github.io/optimTFE/reference/explore_footprints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — explore_footprints","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_segment_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a segment key for fast perimeter calculation — generate_segment_key","title":"Generate a segment key for fast perimeter calculation — generate_segment_key","text":"Creates lookup table boundary segments spatial dataset, identifying polygons share segment. enables efficient perimeter calculations arbitrary subsets polygons.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_segment_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a segment key for fast perimeter calculation — generate_segment_key","text":"","code":"generate_segment_key(spatial)"},{"path":"https://dleopold.github.io/optimTFE/reference/generate_segment_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a segment key for fast perimeter calculation — generate_segment_key","text":"spatial sf object containing geometries planning units","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_segment_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a segment key for fast perimeter calculation — generate_segment_key","text":"data frame polygon IDs segment lengths boundary segment","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary statistics for optimization solutions — generate_summary","title":"Generate summary statistics for optimization solutions — generate_summary","text":"function calculates various summary statistics optimization solutions, including unit counts, suitability metrics, species richness, spatial metrics (spatial data provided).","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary statistics for optimization solutions — generate_summary","text":"","code":"generate_summary(   data = NULL,   out_dir = \".\",   run_id = \"optimTFE\",   suitability_mx = suitability_mx,   unit_ids = unit_ids,   spatial = spatial,   spatial_projection = NULL,   min_units_plot = file.path(out_dir, run_id, \"n_units.pdf\"),   summary_out = file.path(out_dir, run_id, \"summary.csv\"),   return_df = FALSE )"},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary statistics for optimization solutions — generate_summary","text":"data Dataframe containing solution data. NULL, data loaded specified output directory. out_dir Character string specifying output directory path. Default \".\". run_id Character string specifying run identifier. Default \"optimTFE\". suitability_mx Matrix suitability values unit IDs row names species column names. unit_ids Vector unit IDs (must order rows suitability_mx). spatial Spatial data frame (sf object) containing geometries planning units. spatial_projection CRS object string transforming spatial data equal area projection needed. min_units_plot Character string specifying output path minimum units plot description (default = `file.path(out_dir, run_id, \"n_units.pdf\")`). summary_out Character string specifying output path summary data frame (default = `file.path(out_dir, run_id, \"summary.csv\")`). return_df Logical value indicating whether return summary data frame.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary statistics for optimization solutions — generate_summary","text":"data frame summary statistics solution, including number   units, mean/median suitability, species richness metrics, spatial metrics   (area perimeter) spatial data provided.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/metrics_top_solutions.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — metrics_top_solutions","title":"Title — metrics_top_solutions","text":"Title","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/metrics_top_solutions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — metrics_top_solutions","text":"","code":"metrics_top_solutions(data, metrics, summary_type = min)"},{"path":"https://dleopold.github.io/optimTFE/reference/metrics_top_solutions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — metrics_top_solutions","text":"data Dataframe metrics summarized solution. See 'all_sols_metric' dataframe vignette setup. metrics Columns data contain metrics calculate summary_type \"min\" \"max\" (minimum maximum value)","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/metrics_top_solutions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — metrics_top_solutions","text":"dataframe minimum maximum values across metrics","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":null,"dir":"Reference","previous_headings":"","what":"optimTFE algorithm — optimTFE","title":"optimTFE algorithm — optimTFE","text":"Generate suite conservation footprint 'solutions' based feature suitability values list targets features.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"optimTFE algorithm — optimTFE","text":"","code":"optimTFE(   targets = optimTFE::example_targets,   suitability = optimTFE::example_suitability,   subregions = optimTFE::example_subregions,   populations = optimTFE::example_populations,   incompatibility = optimTFE::example_incompatibility,   spatial = optimTFE::example_spatial,   min_spp_suit_score = 0.25,   rand_tolerance = 5,   max_spp_selected = -1,   single_pu_pop = TRUE,   n = 100,   cores = NULL,   progress = TRUE,   batch_size = NULL,   max_batch_size = 1000,   seed = NULL,   out_dir = \".\",   run_id = \"optimTFE\",   output_csv = TRUE,   return_df = FALSE,   force_overwrite = FALSE,   summary = TRUE,   spatial_projection = NULL )"},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"optimTFE algorithm — optimTFE","text":"targets species targets file - path csv file pre-loaded data frame matrix. loading file, first column contain species names, otherwise species names included row names. column direclty following species names contain total targets species. Additional columns specify (optional) subregion targets, values specifying minimum targets required subregion. suitability species suitability matrix - path csv/tsv file pre-loaded data frame matrix. first column must planning unit id / number following columns species. using preloaded matrix data frame, unit ids set row names, first column. Values indicate suitability scores species / taxon planning unit. subregions (optional) path csv/tsv file pre-loaded data frame matrix defining sub-regions within set planning units. Must include 1 row planning unit binary values indicating sub-region membership planning unit. Sub-region column names must match provided `targets` input. populations (optional) path csv/tsv file pre-loaded data frame matrix delineated populations. loading file data can long wide format. Long format consist 3 columns, unit_id, species, population. Wide format one column per species one row per unit_id. providing data frame matrix directly, wide formats accepted unit ids set rownames, column. incompatibility (optional) path csv/tsv file pre-loaded data frame matrix specifying species share planning unit. Must symmetric matrix species names row column names, value 1 indicates species incompatible (unit). spatial (optional) path spatial file data file (.shp .gpkg) pre-loaded sf object containing planning unit polygons. Must unit IDs suitability matrix included first column attribute table. min_spp_suit_score minimum suitability score species considered location (default = 0.25) rand_tolerance range species richness, maximum, consider selection iteration (default = 5) max_spp_selected maximum number species select location (default = -1) reduce 'species packing' within units. parameter cause species unable meet targets. Use -1 limit. single_pu_pop one location (ie unit) selected per delineated population (default = TRUE). applies known population file (`populations`) provided. n number solutions generate (default = 100) cores number cores use (default = NULL, uses available - 1) progress show progress bar (default = TRUE) batch_size parallel processing used, parameter can used process solution batches improved efficiency (default = NULL). provided (NULL), batch size calculated automatically. max_batch_size limit batch size parallel processing (default = 1000). Smaller values allow progress bar update frequently, cost disk writes. seed seed reproducible output (optional) out_dir location write outputs (default = \".\"). NULL, results returned data frame temporary files used. run_id prefix output files (default = \"optimTFE\") output_csv solutions compiled single csv file (default = TRUE) return_df return generated solutions data frame current R session (default = FALSE) force_overwrite overwrite existing output files (default = FALSE) summary generate summary statistics metrics solutions (default = TRUE) spatial_projection optional projection string epsg code use spatial data. applicable spatial data provided summary = TRUE. equal area projection needed calculate spatial metrics area perimeter.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"optimTFE algorithm — optimTFE","text":"function generates conservation footprints based species/feature habitat suitability scores within planning units, target number populations per species. greedy algorithm iteratively selects planning units highest number remaining species targets targets met. mitigate known pitfalls richness-based selection iteration, stochasticity introduced one planning unit randomly selected pool planning units within set number targets maximum iteration. maximize species suitability scores selected units probability selection weighted mean suitability scores remaining targets. Constraints, hybridization, can introduced specifically prohibit algorithm selecting planning unit two taxa. process repeated generate many spatially efficient solutions meet targets species.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solution_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_solution_metric","title":"Title — plot_solution_metric","text":"Title","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solution_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_solution_metric","text":"","code":"plot_solution_metric(   solution_number,   solution_metric_df,   metric,   quantile = NA )"},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solution_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_solution_metric","text":"solution_number Solution number identify distribution plot solution_metric_df Dataframe metrics summarized across solution. See example all_sols_metric vignette setup metric Metric within solution_metric_df plot. must text format, e.g. \"minimum_area\" quantile Optional. Quantile highlight, e.g. top 10 quantile = 0.9","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solution_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — plot_solution_metric","text":"object, call object view ggplot","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solutions_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot frequency distribution of planning unit counts across solutions — plot_solutions_freq","title":"Plot frequency distribution of planning unit counts across solutions — plot_solutions_freq","text":"Plot frequency distribution planning unit counts across solutions","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solutions_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot frequency distribution of planning unit counts across solutions — plot_solutions_freq","text":"","code":"plot_solutions_freq(PU_count_freq_df)"},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solutions_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot frequency distribution of planning unit counts across solutions — plot_solutions_freq","text":"PU_count_freq_df","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/plot_solutions_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot frequency distribution of planning unit counts across solutions — plot_solutions_freq","text":"Plot distribution frequency planning unit counts","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/pu_ct_freq_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map of planning unit inclusion frequency across all solutions — pu_ct_freq_map","title":"Map of planning unit inclusion frequency across all solutions — pu_ct_freq_map","text":"Map planning unit inclusion frequency across solutions","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/pu_ct_freq_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map of planning unit inclusion frequency across all solutions — pu_ct_freq_map","text":"","code":"pu_ct_freq_map(solution_output, pu_spatial_data)"},{"path":"https://dleopold.github.io/optimTFE/reference/pu_ct_freq_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map of planning unit inclusion frequency across all solutions — pu_ct_freq_map","text":"solution_output solution output object optimTFE algorithm pu_spatial_data spatial data associated planning units; sf object","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/pu_ct_freq_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map of planning unit inclusion frequency across all solutions — pu_ct_freq_map","text":"Map: inclusion planning units across solution","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/selected_spp_suit.html","id":null,"dir":"Reference","previous_headings":"","what":"Select solution: suitability values for 'picked' features — selected_spp_suit","title":"Select solution: suitability values for 'picked' features — selected_spp_suit","text":"Select solution: suitability values 'picked' features","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/selected_spp_suit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select solution: suitability values for 'picked' features — selected_spp_suit","text":"","code":"selected_spp_suit(solution_number, solution_output, meta_filepath)"},{"path":"https://dleopold.github.io/optimTFE/reference/selected_spp_suit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select solution: suitability values for 'picked' features — selected_spp_suit","text":"solution_number Solution number calculate suitability value solution_output output optimTFE algorithm, data.frame object meta_filepath solutions.meta file optimTFE algorithm; saved solution output","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/selected_spp_suit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select solution: suitability values for 'picked' features — selected_spp_suit","text":"Suitability value across selected features solution","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/single_solution_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Single solution map — single_solution_map","title":"Single solution map — single_solution_map","text":"Single solution map","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/single_solution_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single solution map — single_solution_map","text":"","code":"single_solution_map(solution_number, solution_output, pu_data)"},{"path":"https://dleopold.github.io/optimTFE/reference/single_solution_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single solution map — single_solution_map","text":"solution_number solution number plot solution_output output optimTFE algorithm, data.frame object pu_data sf object first column unit_id planning unit number second column geom; data.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/single_solution_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single solution map — single_solution_map","text":"Map selected solution; potential conservation footprint","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solution_suit_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate suitability value summaries for a solution — solution_suit_values","title":"Generate suitability value summaries for a solution — solution_suit_values","text":"Generate suitability value summaries solution","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solution_suit_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate suitability value summaries for a solution — solution_suit_values","text":"","code":"solution_suit_values(solution_number, solution_output, meta_filepath)"},{"path":"https://dleopold.github.io/optimTFE/reference/solution_suit_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate suitability value summaries for a solution — solution_suit_values","text":"solution_number solution number generate values solution_output solution output object optimTFE algorithm meta_filepath solutions.meta file optimTFE algorithm; saved solution output","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solution_suit_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate suitability value summaries for a solution — solution_suit_values","text":"Dataframe suitability values input feature including columns: unit_id, solution, select_order, feature suitability columns.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_gen_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Multiple Solutions as a Data Frame — solutions_gen_df","title":"Generate Multiple Solutions as a Data Frame — solutions_gen_df","text":"function iterates solution_ids, calls `solution_gen` ID, combines results single data frame. solution generation process implements greedy algorithm iteratively selects planning units high species richness satisfy species targets across subregions.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_gen_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Multiple Solutions as a Data Frame — solutions_gen_df","text":"","code":"solutions_gen_df(   solution_ids,   suitability,   spp_targets,   unit_regions,   unit_counts,   regional_min,   regional_max,   populations,   population_counts,   single_pu_pop,   rand_tolerance,   max_spp_selected,   spp_names,   seed,   incompat = NULL )"},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_gen_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Multiple Solutions as a Data Frame — solutions_gen_df","text":"solution_ids IntegerVector solution IDs. One solution generated ID provided. suitability NumericMatrix species suitability scores, planning units rows species columns. spp_targets IntegerVector target populations species. unit_regions IntegerVector mapping planning units respective regions. unit_counts IntegerMatrix unit counts species region. regional_min IntegerMatrix minimum targets species region. regional_max IntegerMatrix maximum targets species region. populations IntegerMatrix specifying known populations species planning unit. population_counts IntegerMatrix population counts species region. single_pu_pop Logical flag indicating whether one unit selected per known population (default = TRUE). rand_tolerance Integer specifying range species richness maximum consider selection iteration (default = 5). max_spp_selected Integer maximum number species select location reduce 'species packing' within units. Use -1 limit. spp_names CharacterVector species names. seed Unsigned 64-bit integer seed random number generation. incompat Optional IntegerMatrix specifying species incompatibilities, 1 indicates two species share planning unit.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_gen_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Multiple Solutions as a Data Frame — solutions_gen_df","text":"data frame columns: solution, order, unit_id, passing,   one column per species indicating species targets satisfied   planning unit.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_unit_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Planning unit count for each solution in the optimTFE algorithm output — solutions_unit_ct","title":"Planning unit count for each solution in the optimTFE algorithm output — solutions_unit_ct","text":"Planning unit count solution optimTFE algorithm output","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_unit_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planning unit count for each solution in the optimTFE algorithm output — solutions_unit_ct","text":"","code":"solutions_unit_ct(solution_output)"},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_unit_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Planning unit count for each solution in the optimTFE algorithm output — solutions_unit_ct","text":"solution_output output optimTFE_algorithm, object R environment","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/solutions_unit_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Planning unit count for each solution in the optimTFE algorithm output — solutions_unit_ct","text":"Returns data.frame two columns; solution (solution number) PU_ct (number planning units solution)","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/unique_solution_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of unique and identical solutions within the optimTFE algorithm output — unique_solution_ct","title":"Number of unique and identical solutions within the optimTFE algorithm output — unique_solution_ct","text":"Number unique identical solutions within optimTFE algorithm output","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/unique_solution_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of unique and identical solutions within the optimTFE algorithm output — unique_solution_ct","text":"","code":"unique_solution_ct(solution_output)"},{"path":"https://dleopold.github.io/optimTFE/reference/unique_solution_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of unique and identical solutions within the optimTFE algorithm output — unique_solution_ct","text":"solution_output output optimTFE_algorithm, object R environment","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/unique_solution_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of unique and identical solutions within the optimTFE algorithm output — unique_solution_ct","text":"Returns dataframe count list solutions identical; also includes planning unit (PU) combinations unique solution.","code":""}]
