[{"path":"https://dleopold.github.io/optimTFE/DISCLAIMER.html","id":null,"dir":"","previous_headings":"","what":"Disclaimer","title":"Disclaimer","text":"software preliminary provisional subject revision. provided meet need timely best science. software received final approval U.S. Geological Survey (USGS). warranty, expressed implied, made USGS U.S. Government functionality software related material shall fact release constitute warranty. software provided condition neither USGS U.S. Government shall held liable damages resulting authorized unauthorized use software.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"License","title":"License","text":"Unless otherwise noted, project public domain United States contains materials originally came United States Geological Survey, agency United States Department Interior. information, see official USGS copyright policy https://www.usgs.gov/information-policies--instructions/copyrights--credits Additionally, waive copyright related rights work worldwide CC0 1.0 Universal public domain dedication.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"cc0-10-universal-summary","dir":"","previous_headings":"","what":"CC0 1.0 Universal Summary","title":"License","text":"human-readable summary Legal Code (read full text).","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"no-copyright","dir":"","previous_headings":"CC0 1.0 Universal Summary","what":"No Copyright","title":"License","text":"person associated work deed dedicated work public domain waiving rights work worldwide copyright law, including related neighboring rights, extent allowed law. can copy, modify, distribute perform work, even commercial purposes, without asking permission.","code":""},{"path":"https://dleopold.github.io/optimTFE/LICENSE.html","id":"other-information","dir":"","previous_headings":"CC0 1.0 Universal Summary","what":"Other Information","title":"License","text":"way patent trademark rights person affected CC0, rights persons may work work used, publicity privacy rights. Unless expressly stated otherwise, person associated work deed makes warranties work, disclaims liability uses work, fullest extent permitted applicable law. using citing work, imply endorsement author affirmer.","code":""},{"path":"https://dleopold.github.io/optimTFE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Devin R Leopold. Author, maintainer. Christina R Leopold. Author. Lucas Berio Fortini. Author.","code":""},{"path":"https://dleopold.github.io/optimTFE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leopold DR, Leopold CR, Fortini LB (2025). optimTFE: Conservation recovery planning via optimization algorithm. R package version 1.0.0, https://github.com/dleopold/optimTFE.git.","code":"@Manual{,   title = {optimTFE: Conservation recovery planning via optimization algorithm},   author = {Devin R Leopold and Christina R Leopold and Lucas Berio Fortini},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/dleopold/optimTFE.git}, }"},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"optimtfe","dir":"","previous_headings":"","what":"Conservation recovery planning via optimization algorithm","title":"Conservation recovery planning via optimization algorithm","text":"OptimTFE spatial decision-support tool designed help conservation practitioners identify priority recovery areas species/taxonomic groups based known location data, habitat suitability values, relevant data inputs. optimTFE tool developed improve transparency, flexibility, expert engagement throughout spatial conservation prioritization process.optimTFE can used dataset includes suitability values species target number priority recovery areas . tool designed spatial visualization, optimization algorithm require spatial data. tool based spatial conservation prioritization tool, Marxan, terminology largely adopted (Ball et al., 2009). package includes two data visualization tools using RShiny allow visualizing tradeoffs across metrics evaluating solutions generated using optimTFE algorithm. function generates conservation footprints based species/feature habitat suitability scores within planning units, target number populations per species. greedy algorithm iteratively selects planning units highest number remaining species targets targets met. mitigate known pitfalls richness-based selection iteration, stochasticity introduced one planning unit randomly selected pool planning units within set number targets maximum iteration. maximize species suitability scores selected units probability selection weighted mean suitability scores remaining targets. Constraints, hybridization, can introduced specifically prohibit algorithm selecting planning unit two taxa. process repeated generate many spatially efficient solutions meet targets species.","code":""},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Conservation recovery planning via optimization algorithm","text":"can install optimTFE GitHub :","code":"# install.packages(\"pak\") pak::pak(\"dleopold/optimTFE\")"},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"suggested-citation","dir":"","previous_headings":"","what":"Suggested citation","title":"Conservation recovery planning via optimization algorithm","text":"Leopold, C. R., Leopold, D. R., Berio Fortini, L. optimTFE, U.S. Geological Survey software release, https://doi.org/10.5066/P137H9PF.","code":""},{"path":"https://dleopold.github.io/optimTFE/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Conservation recovery planning via optimization algorithm","text":"Berio Fortini, L., Leopold, C. L., Amidon, F., Leopold, D. R., Fretz, J. S., Jacobi, J. D. Mehrhoff, L., Price, J. P., Duvall, F., Keir, M., Oppenheimer, H., Weiseneberger, L., & Sutter, R. Accepted. Advancing Landscape-Scale Conservation Planning Transparent, Flexible, Expert-Engaged Approach -Risk Species Recovery Era Rapid Ecological Change. Conservation Biology. Leopold, C.R., Berio Fortini, L., Amidon, F., Fretz, S., Jacobi, J.D., Mehrhoff, L., & Sutter, R. 2023. East Maui, Hawaiʻi optimization climate resilient habitat native plant species recovery, 2021: U.S. Geological Survey data release, https://doi.org/10.5066/P9LKNAR4. Ball, . R., Possingham, H. P., & Watts, M. E. (2009). Marxan relatives: Software spatial conservation prioritization. . Moilanen, K. . Wilson, & H. P. Possingham (Eds.), Spatial conservation prioritization: Quantitative methods computational tools (pp. 185–195). Oxford University Press.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Species incompatibility input — example_incompatibility","title":"Example Species incompatibility input — example_incompatibility","text":"n x n binary matrix indicating species pairs compatable (0) incompatibile (1).","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Species incompatibility input — example_incompatibility","text":"","code":"example_incompatibility"},{"path":"https://dleopold.github.io/optimTFE/reference/example_incompatibility.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Species incompatibility input — example_incompatibility","text":"matrix 30 rows 30 columns","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Known population input — example_populations","title":"Example Known population input — example_populations","text":"example know population matrix, 795 rows (units) 30 columns (species). Unique values species column indicates known population, popultaions spanning one unit.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Known population input — example_populations","text":"","code":"example_populations"},{"path":"https://dleopold.github.io/optimTFE/reference/example_populations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Known population input — example_populations","text":"matrix 795 rows 30 columns","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Spatial Data — example_spatial","title":"Example Spatial Data — example_spatial","text":"hexagonal grid planning units.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Spatial Data — example_spatial","text":"","code":"example_spatial"},{"path":"https://dleopold.github.io/optimTFE/reference/example_spatial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Spatial Data — example_spatial","text":"spatial data frame 795 rows: unit_id Planning unit name / identifier geometry hexagonal grid","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Subregions input — example_subregions","title":"Example Subregions input — example_subregions","text":"example subregions matrix, specifying example planning units comprise `left` `right` regions.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Subregions input — example_subregions","text":"","code":"example_subregions"},{"path":"https://dleopold.github.io/optimTFE/reference/example_subregions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Subregions input — example_subregions","text":"object class matrix (inherits array) 795 rows 2 columns.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Species Suitability Data — example_suitability","title":"Example Species Suitability Data — example_suitability","text":"matrix habitat suitability values 30 species.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Species Suitability Data — example_suitability","text":"","code":"example_suitability"},{"path":"https://dleopold.github.io/optimTFE/reference/example_suitability.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Species Suitability Data — example_suitability","text":"numeric matrix 796 rows (units) 30 columns (species)","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Targets Data — example_targets","title":"Example Targets Data — example_targets","text":"example targets matrix, specifying 10 total conservation targets 30 species (rows). matrix include subregion targets 2 Bioregions, `left` `right`.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Targets Data — example_targets","text":"","code":"example_targets"},{"path":"https://dleopold.github.io/optimTFE/reference/example_targets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Targets Data — example_targets","text":"matrix 30 rows 3 columns: total total target value species left species target value left region right species target value right region","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary statistics for optimization solutions — generate_summary","title":"Generate summary statistics for optimization solutions — generate_summary","text":"function calculates various summary statistics optimization solutions, including unit counts, suitability metrics, species richness, spatial metrics (spatial data provided).","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary statistics for optimization solutions — generate_summary","text":"","code":"generate_summary(   data = NULL,   out_dir = \".\",   run_id = \"optimTFE\",   suitability_mx = suitability_mx,   unit_ids = unit_ids,   spatial = spatial,   spatial_projection = NULL,   min_units_plot = file.path(out_dir, run_id, \"n_units.pdf\"),   summary_out = file.path(out_dir, run_id, \"summary.csv\"),   return_df = FALSE )"},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary statistics for optimization solutions — generate_summary","text":"data Dataframe containing solution data. NULL, data loaded specified output directory. out_dir Character string specifying output directory path. Default \".\". run_id Character string specifying run identifier. Default \"optimTFE\". suitability_mx Matrix suitability values unit IDs row names species column names. unit_ids Vector unit IDs (must order rows suitability_mx). spatial Spatial data frame (sf object) containing geometries planning units. spatial_projection CRS object string transforming spatial data equal area projection needed. min_units_plot Character string specifying output path minimum units plot description (default = `file.path(out_dir, run_id, \"n_units.pdf\")`). summary_out Character string specifying output path summary data frame (default = `file.path(out_dir, run_id, \"summary.csv\")`). return_df Logical value indicating whether return summary data frame.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/generate_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary statistics for optimization solutions — generate_summary","text":"data frame summary statistics solution, including number   units, mean/median suitability, species richness metrics, spatial metrics   (area perimeter) spatial data provided.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":null,"dir":"Reference","previous_headings":"","what":"optimTFE algorithm — optimTFE","title":"optimTFE algorithm — optimTFE","text":"Generate suite conservation footprint 'solutions' based feature suitability values list targets features.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"optimTFE algorithm — optimTFE","text":"","code":"optimTFE(   targets = optimTFE::example_targets,   suitability = optimTFE::example_suitability,   subregions = optimTFE::example_subregions,   populations = optimTFE::example_populations,   incompatibility = optimTFE::example_incompatibility,   spatial = optimTFE::example_spatial,   min_spp_suit_score = 0.25,   rand_tolerance = 5,   max_spp_selected = -1,   single_pu_pop = TRUE,   n = 100,   cores = NULL,   progress = TRUE,   batch_size = NULL,   max_batch_size = 1000,   seed = NULL,   out_dir = \".\",   run_id = \"optimTFE\",   output_csv = TRUE,   return_df = FALSE,   force_overwrite = FALSE,   summary = TRUE,   spatial_projection = NULL )"},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"optimTFE algorithm — optimTFE","text":"targets species targets file - path csv file pre-loaded data frame matrix. loading file, first column contain species names, otherwise species names included row names. column direclty following species names contain total targets species. Additional columns specify (optional) subregion targets, values specifying minimum targets required subregion. suitability species suitability matrix - path csv/tsv file pre-loaded data frame matrix. first column must planning unit id / number following columns species. using preloaded matrix data frame, unit ids set row names, first column. Values indicate suitability scores species / taxon planning unit. subregions (optional) path csv/tsv file pre-loaded data frame matrix defining sub-regions within set planning units. Must include 1 row planning unit binary values indicating sub-region membership planning unit. Sub-region column names must match provided `targets` input. populations (optional) path csv/tsv file pre-loaded data frame matrix delineated populations. loading file data can long wide format. Long format consist 3 columns, unit_id, species, population. Wide format one column per species one row per unit_id. providing data frame matrix directly, wide formats accepted unit ids set rownames, column. incompatibility (optional) path csv/tsv file pre-loaded data frame matrix specifying species share planning unit. Must symmetric matrix species names row column names, value 1 indicates species incompatible (unit). spatial (optional) path spatial file data file (.shp .gpkg) pre-loaded sf object containing planning unit polygons. Must unit IDs suitability matrix included first column attribute table. min_spp_suit_score minimum suitability score species considered location (default = 0.25) rand_tolerance range species richness, maximum, consider selection iteration (default = 5) max_spp_selected maximum number species select location (default = -1) reduce 'species packing' within units. parameter cause species unable meet targets. Use -1 limit. single_pu_pop one location (ie unit) selected per delineated population (default = TRUE). applies known population file (`populations`) provided. n number solutions generate (default = 100) cores number cores use (default = NULL, uses available - 1) progress show progress bar (default = TRUE) batch_size parallel processing used, parameter can used process solution batches improved efficiency (default = NULL). provided (NULL), batch size calculated automatically. max_batch_size limit batch size parallel processing (default = 1000). Smaller values allow progress bar update frequently, cost disk writes. seed seed reproducible output (optional) out_dir location write outputs (default = \".\"). NULL, results returned data frame temporary files used. run_id prefix output files (default = \"optimTFE\") output_csv solutions compiled single csv file (default = TRUE) return_df return generated solutions data frame current R session (default = FALSE) force_overwrite overwrite existing output files (default = FALSE) summary generate summary statistics metrics solutions (default = TRUE) spatial_projection optional projection string epsg code use spatial data. applicable spatial data provided summary = TRUE. equal area projection needed calculate spatial metrics area perimeter.","code":""},{"path":"https://dleopold.github.io/optimTFE/reference/optimTFE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"optimTFE algorithm — optimTFE","text":"function generates conservation footprints based species/feature habitat suitability scores within planning units, target number populations per species. greedy algorithm iteratively selects planning units highest number remaining species targets targets met. mitigate known pitfalls richness-based selection iteration, stochasticity introduced one planning unit randomly selected pool planning units within set number targets maximum iteration. maximize species suitability scores selected units probability selection weighted mean suitability scores remaining targets. Constraints, hybridization, can introduced specifically prohibit algorithm selecting planning unit two taxa. process repeated generate many spatially efficient solutions meet targets species.","code":""}]
